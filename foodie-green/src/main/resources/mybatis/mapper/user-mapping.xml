<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="user.UserMapper">

	<!-- 회원가입 -->
	<insert id="signin" parameterType="UserDTO">
		INSERT INTO user(name,nickname,email,pw,phone)
		values(#{name},#{nickname},#{email},#{pw},#{phone})
	</insert>
	
	<!-- 로그인 -->
	<select id="login" parameterType="HashMap" resultType="UserDTO">
		select*from user
		where email=#{email} and pw=#{pw}
	</select>
	
	<!-- 이메일 찾기 -->
	<select id="findId" parameterType="HashMap" resultType="String">
		select email from user
		where name=#{name} and phone=#{phone};
	</select>
	
	<!-- 비밀번호 찾기 -->
	<select id="findPw" parameterType="HashMap" resultType="String">
		select pw from user
		where email=#{email} and phone=#{phone};
	</select>
	
	<!-- 로그인 -->
	<select id="login_kakao" parameterType="String" resultType="UserDTO">
		select*from user
		where email=#{email};
	</select>
	
	<!-- 이메일 중복체크 -->
	<select id="checkEmail" parameterType="String" resultType="int">
		select exists 
		(select email from user where email=#{email});
	</select>
	
	<!-- 닉네임 중복체크 -->
	<select id="checkNickname" parameterType="String" resultType="int">
		select exists 
		(select nickname from user where nickname=#{nickname});
	</select>
	
	<!-- 회원정보 수정 -->
	<update id="editUser" parameterType="UserDTO">
		update user 
		set nickname=#{nickname}, pw=#{pw}, phone=#{phone}
		where email=#{email};
	</update>
	
	<delete id="deleteUser" parameterType="String">
	delete from user
	where email=#{email};
	</delete>
	
	<!-- 글쓴 내역 불러오기 -->
	<select id="getDiary" parameterType="String" resultType="UserDiaryDTO">
	select id,title, contents, recipes, writer, writing, likecnt, photo, 
	(select count(*) from diary where writer=#{count} ) count
	from diary d 
	where writer=#{writer};
	</select>
</mapper>